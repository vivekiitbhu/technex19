# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2017-05-13 18:36
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='chutiyapa',
            fields=[
                ('responseId', models.AutoField(primary_key=True, serialize=False)),
                ('fieldChutiyap', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('collegeId', models.AutoField(primary_key=True, serialize=False)),
                ('collegeName', models.CharField(max_length=250)),
                ('status', models.BooleanField(default=False)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('state', models.CharField(blank=True, max_length=250, null=True)),
                ('collegeWebsite', models.CharField(default='0', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='CorporateConclave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventId', models.AutoField(primary_key=True, serialize=False)),
                ('eventOrder', models.SmallIntegerField(default=0)),
                ('eventName', models.CharField(max_length=50)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('deadLine', models.DateTimeField(blank=True, null=True)),
                ('prizeMoney', models.IntegerField(blank=True, null=True)),
                ('maxMembers', models.SmallIntegerField(blank=True, null=True)),
                ('nameSlug', models.SlugField(null=True)),
                ('abstract', models.SmallIntegerField(default=0)),
                ('image', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='EventOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optionName', models.CharField(max_length=50, null=True)),
                ('optionDescription', ckeditor.fields.RichTextField()),
                ('eventOptionOrder', models.SmallIntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Event')),
            ],
        ),
        migrations.CreateModel(
            name='Exhibitions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FbConnect',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=200, null=True)),
                ('accessToken', models.CharField(max_length=250, null=True)),
                ('profileImage', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='FbReach',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=200, null=True)),
                ('accessToken', models.CharField(max_length=250, null=True)),
                ('profileImage', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='ForgotPass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=250)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GuestLecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('lecturerName', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('lecturerBio', ckeditor.fields.RichTextField()),
                ('lectureType', models.CharField(max_length=100)),
                ('photo', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Hospitality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InstituteDay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MetaTags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationId', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('time', models.DateTimeField(auto_now=True)),
                ('photo', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ParentEvent',
            fields=[
                ('parentEventId', models.AutoField(primary_key=True, serialize=False)),
                ('categoryName', models.CharField(max_length=50)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('order', models.SmallIntegerField(default=0)),
                ('sponimage', models.TextField(blank=True, null=True)),
                ('sponlink', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('assosponimage', models.TextField(blank=True, null=True)),
                ('assosponlink', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('nameSlug', models.SlugField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentStatusa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(max_length=15)),
                ('ticketId', models.CharField(max_length=100)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('ticketPrice', models.IntegerField(blank=True, null=True)),
                ('timeStamp', models.CharField(blank=True, max_length=50, null=True)),
                ('ticketName', models.CharField(blank=True, max_length=65, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrimaryIndustry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Pronites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='questions',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('integerAnswer', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='quiz',
            fields=[
                ('quizId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('activeStatus', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='quizResponses',
            fields=[
                ('responseId', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.SmallIntegerField(default=1)),
                ('startTime', models.DateTimeField(auto_now=True, null=True)),
                ('questions', models.ManyToManyField(to='Auth.questions')),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='quizTeam',
            fields=[
                ('teamId', models.AutoField(primary_key=True, serialize=False)),
                ('quizTeamId', models.CharField(blank=True, max_length=10, null=True)),
                ('quizAttemptStatus', models.SmallIntegerField(default=0)),
                ('slot', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='quizTeam2',
            fields=[
                ('teamId', models.AutoField(primary_key=True, serialize=False)),
                ('quizTeamId', models.CharField(blank=True, max_length=10, null=True)),
                ('quizAttemptStatus', models.SmallIntegerField(default=0)),
                ('slot', models.SmallIntegerField(default=0)),
                ('member1Email', models.CharField(blank=True, max_length=65, null=True)),
                ('member2Email', models.CharField(blank=True, max_length=65, null=True)),
                ('member1Phone', models.CharField(blank=True, max_length=15, null=True)),
                ('member2Phone', models.CharField(blank=True, max_length=15, null=True)),
                ('name1', models.CharField(blank=True, max_length=50, null=True)),
                ('name2', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.BooleanField(default=False)),
                ('key', models.CharField(blank=True, max_length=120, null=True)),
                ('quiz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='ReaderStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Notification')),
            ],
        ),
        migrations.CreateModel(
            name='sheetpayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(blank=True, max_length=15, null=True)),
                ('ticketId', models.CharField(max_length=100)),
                ('contact', models.CharField(blank=True, max_length=20, null=True)),
                ('ticketPrice', models.IntegerField(blank=True, null=True)),
                ('timeStamp', models.CharField(blank=True, max_length=50, null=True)),
                ('ticketName', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.SmallIntegerField(default=999)),
                ('name', models.CharField(max_length=100)),
                ('imageLink', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('websiteLink', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='SponsorshipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('order', models.SmallIntegerField(default=99)),
            ],
        ),
        migrations.CreateModel(
            name='StartUpFair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idea', models.CharField(blank=True, max_length=250)),
                ('interests', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(blank=True, max_length=20000, null=True)),
                ('year', models.SmallIntegerField(default=0)),
                ('angelListUrl', models.CharField(blank=True, max_length=200, null=True)),
                ('crunchBaseUrl', models.CharField(blank=True, max_length=200, null=True)),
                ('teamName', models.CharField(max_length=35)),
                ('bType', models.ManyToManyField(null=True, related_name='btype', to='Auth.BusinessType')),
                ('pindusry', models.ManyToManyField(null=True, related_name='primary_industry', to='Auth.PrimaryIndustry')),
            ],
        ),
        migrations.CreateModel(
            name='StartupFairData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('introduction', models.CharField(blank=True, max_length=250, null=True)),
                ('content', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StartUpMails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=65, unique=True)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.StartUpFair')),
            ],
        ),
        migrations.CreateModel(
            name='suggestions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suggestion', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('teamName', models.CharField(blank=True, max_length=50, null=True)),
                ('teamId', models.AutoField(primary_key=True, serialize=False)),
                ('technexTeamId', models.CharField(blank=True, max_length=10, null=True)),
                ('abstractstatus', models.SmallIntegerField(default=0)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Event')),
            ],
        ),
        migrations.CreateModel(
            name='TeamList',
            fields=[
                ('teamId', models.AutoField(primary_key=True, serialize=False)),
                ('teamName', models.CharField(max_length=50)),
                ('order', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='TeamMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(blank=True, max_length=65, null=True)),
                ('facebookLink', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('photo', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
                ('designation', models.CharField(max_length=50)),
                ('number', models.BigIntegerField(blank=True, null=True)),
                ('order', models.SmallIntegerField(default=0)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.TeamList')),
            ],
        ),
        migrations.CreateModel(
            name='TechProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=60, null=True)),
                ('technexId', models.CharField(blank=True, max_length=30, null=True)),
                ('year', models.IntegerField(choices=[(1, 'First'), (2, 'Second'), (3, 'Third'), (4, 'Fourth'), (5, 'Fifth'), (6, 'Passout(Only for Startup Fair)')])),
                ('mobileNumber', models.BigIntegerField()),
                ('botInfo', models.CharField(blank=True, max_length=65, null=True)),
                ('city', models.CharField(default='varanasi', max_length=65)),
                ('referral', models.EmailField(blank=True, max_length=60, null=True)),
                ('pin', models.CharField(blank=True, max_length=20, null=True)),
                ('apploginStatus', models.BooleanField(default=False)),
                ('notificationToken', models.TextField(blank=True, null=True)),
                ('tshirtdata', models.BooleanField(default=False)),
                ('tshirtsize', models.CharField(blank=True, max_length=4, null=True)),
                ('color', models.CharField(blank=True, max_length=10, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('arrivaldate', models.CharField(blank=True, max_length=15, null=True)),
                ('college', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.College')),
                ('confirmpart', models.ManyToManyField(blank=True, null=True, to='Auth.Event')),
                ('fb', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.FbConnect')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (('permission_code', 'Publicity portal'),),
            },
        ),
        migrations.CreateModel(
            name='Way2smsAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=20)),
                ('messages_left', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='Way2smsAccount_Premium',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=20)),
                ('messages_left', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='WorkshopOptions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optionName', models.CharField(max_length=50, null=True)),
                ('optionDescription', ckeditor.fields.RichTextField()),
                ('optionOrder', models.SmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Workshops',
            fields=[
                ('workshopId', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.SmallIntegerField(null=True)),
                ('title', models.CharField(max_length=100)),
                ('description', ckeditor.fields.RichTextField()),
                ('dateTime', models.DateTimeField(null=True)),
                ('workshopFees', models.IntegerField(null=True)),
                ('maxMembers', models.SmallIntegerField(null=True)),
                ('slug', models.SlugField(null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('sponimage', models.TextField(blank=True, null=True)),
                ('sponlink', models.TextField(blank=True, null=True, validators=[django.core.validators.URLValidator()])),
            ],
        ),
        migrations.CreateModel(
            name='WorkshopTeam',
            fields=[
                ('teamName', models.CharField(blank=True, max_length=50, null=True)),
                ('teamId', models.AutoField(primary_key=True, serialize=False)),
                ('members', models.ManyToManyField(related_name='members_for_workshop', to='Auth.TechProfile')),
                ('teamLeader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamLeaderForWorkshop', to='Auth.TechProfile')),
                ('workshop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Workshops')),
            ],
        ),
        migrations.AddField(
            model_name='workshopoptions',
            name='workshop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.Workshops'),
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(null=True, related_name='members', to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='team',
            name='teamLeader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teamLeader', to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='suggestions',
            name='tech',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='startupfair',
            name='teamLeader',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='sponsors',
            name='sponsorType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.SponsorshipType'),
        ),
        migrations.AddField(
            model_name='sheetpayment',
            name='tech',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='readerstatus',
            name='reader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='quizteam',
            name='members',
            field=models.ManyToManyField(null=True, related_name='quizMembers', to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='quizteam',
            name='quiz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.quiz'),
        ),
        migrations.AddField(
            model_name='quizresponses',
            name='quizTeam',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Auth.quizTeam2'),
        ),
        migrations.AddField(
            model_name='questions',
            name='quiz',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.quiz'),
        ),
        migrations.AddField(
            model_name='paymentstatusa',
            name='tech',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.TechProfile'),
        ),
        migrations.AddField(
            model_name='metatags',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.ParentEvent'),
        ),
        migrations.AddField(
            model_name='event',
            name='parentEvent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.ParentEvent'),
        ),
        migrations.AddField(
            model_name='chutiyapa',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Auth.questions'),
        ),
        migrations.AddField(
            model_name='chutiyapa',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Auth.quizResponses'),
        ),
    ]
